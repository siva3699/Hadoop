{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
\margl1440\margr1440\vieww28600\viewh17520\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 import org.apache.spark.SparkContext\
\
import org.apache.spark.SparkConf\
\
import org.apache.spark.sql.functions._\
\
import org.apache.spark.sql.SQLContext\
\
import org.apache.spark.sql.hive.HiveContext\
\
import org.apache.spark.sql.hive.orc\
\
val stocks = sc.textFile("file:///root/yahoo_stocks.csv")\
\
val header = stocks.first()\
\
\
val data = stocks.mapPartitionsWithIndex\{ (idx, iter) => if (idx == 0) iter.drop(1) else iter \}\
\
\
data.count()\
\
stocks.count()\
\
import sqlContext.implicits._\
\
\
case class YahooStockPrice(date: String, open: Float, high: Float, low: Float, close: Float, volume: Integer, adjClose: Float)\
\
val stocksDF = data.map( rec => rec.split(",")).map(rec => YahooStockPrice(rec(0).toString,rec(1).toFloat,rec(2).toFloat,rec(3).toFloat,rec(4).toFloat,rec(5).toInt,rec(6).toFloat)).toDF()\
\
stocksDF.registerTempTable("YAHOO_STOCKS")\
\
val YAHOO_STOCKS = sqlContext.sql("select * from YAHOO_STOCKS")\
\
YAHOO_STOCKS.write.format("orc").save("file:///root/yahoo")\
\
val hivectx = new HiveContext(sc)\
\
hivectx.sql("CREATE TABLE   yahoo_orc_table (date STRING, open FLOAT, high FLOAT, low FLOAT, close FLOAT, volume INT, adjClose FLOAT) STORED AS ORC ")\
\
\
hivectx.sql("LOAD DATA LOCAL INPATH '/root/yahoo' INTO TABLE  yahoo_orc_table")\
\
\
 hivectx.sql("select * from  yahoo_orc_table").collect().foreach(println)\
\
\
hivectx.sql("show create table  yahoo_orc_table").collect().foreach(println)\
\
\
\
\
\
\
\
\
\
\
\
}